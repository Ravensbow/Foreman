@inject System.Net.Http.IHttpClientFactory httpFacotry
@inject NavigationManager navigator

<EditForm Model="@Model" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator/>
    @ChildContent
    <input type="hidden" @bind="Model.CourseId"/>
    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Add</MudButton>
</EditForm>

@code{
    [Parameter]
    public Foreman.PluginManager.IModuleInstance Model { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [CascadingParameter]
    protected string componentName { get; set; }

    [CascadingParameter]
    protected int courseId { get; set; }

    private HttpClient http;

    protected override void OnInitialized()
    {
        Model.CourseId = courseId;
        http = httpFacotry.CreateClient("Foreman.ServerAPI");
    }

    public async Task OnValidSubmit()
    {
        //string json = System.Text.Json.JsonSerializer.Serialize(Model);
        string json = Newtonsoft.Json.JsonConvert.SerializeObject(Model);
        var postdata = new StringContent(json, System.Text.Encoding.UTF8, "application/json");
        postdata.Headers.ContentType = new  System.Net.Http.Headers.MediaTypeHeaderValue("application/json");
        var response = await http.PostAsync("/"+componentName+"/Management/Add", postdata);
        if(response.IsSuccessStatusCode)
        {
            int id = await response.Content.ReadFromJsonAsync<int>();
            navigator.NavigateTo($"/course/show/{courseId}");
        }
        else
        {
            //TODO: Dodac komunikat
            Console.WriteLine("Error");
        }
    }
}