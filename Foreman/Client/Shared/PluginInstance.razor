@inject IComponentService ComponentService
@inject IHttpClientFactory http

@if(pluginInstance!=null)
{
    @pluginInstance
}


@code {
    [Parameter]
    public int PluginId { get; set; }
    [Parameter]
    public int InstanceId { get; set; }

    string componentName;
    HttpClient httpClient;
    RenderFragment pluginInstance;

    protected override async Task OnInitializedAsync()
    {
        httpClient = http.CreateClient("Foreman.ServerAPI");
        var response = await httpClient.GetAsync($"Plugin/PluginNameById/{PluginId}");
        if (!response.IsSuccessStatusCode)
        {
            //TODO: Komunikat
            return;
        }
        componentName = await response.Content.ReadAsStringAsync();
        pluginInstance = dynamicComponent();

    }

    RenderFragment dynamicComponent() => builder =>
    {
        var component = ComponentService.GetComponentByName(componentName + "instance");
        builder.OpenComponent(0,component.Component);

        for (int i = 0; i < component.Parameters.Count; i++)
        {
            var attribute = component.Parameters.ElementAt(i);
            builder.AddAttribute(i+1,attribute.Key,attribute.Value);
        }
        builder.AddAttribute(component.Parameters.Count, "InstanceId", InstanceId);
        builder.CloseComponent();
    };
}
