@page "/"
@page "/pages/authentication/login"
@layout LoginLayout

@inject HttpClient Http
@inject NavigationManager NavMenager

<EditForm Model="loginModel" OnValidSubmit="LoginUser" >
    <DataAnnotationsValidator/>
    
    <MudText Typo="Typo.h4" GutterBottom="true">Sign In</MudText>
    @if (!success)
    {
        <MudAlert Severity="Severity.Error">Login Failed! Incorrect Email or Password.</MudAlert>
    }
    <MudText>Don't have an account? <MudLink Href="/pages/authentication/register">Sign Up</MudLink></MudText>

    <MudTextField T="string" @bind-Value="@loginModel.Email" Label="E-mail" Variant="Variant.Outlined" Class="my-6" For="@(()=>loginModel.Email)"></MudTextField>
    <MudTextField @bind-Value="@loginModel.Password" Label="Password" Variant="Variant.Outlined" InputType="@PasswordInput" For="@(() => loginModel.Password)" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="TogglePasswordVisibility" />

    <div Class="d-flex justify-space-between align-center">
        <MudCheckBox T="bool" @bind-Checked="@loginModel.RememberMe" Label="Remember me?" Color="Color.Primary" Class="ml-n1 my-3"></MudCheckBox>
        <MudLink Href="/pages/authentication/forgot-password">Forgot password?</MudLink>
    </div>


    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Size="Size.Large" FullWidth="true">Sign In</MudButton>
</EditForm>


@code {
    [Inject]
    public Services.AccountService AccountService { get; set; }

    Foreman.Shared.Models.Account.LoginModel loginModel = new Foreman.Shared.Models.Account.LoginModel();
    bool PasswordVisibility;
    bool success = true;
    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;

    void TogglePasswordVisibility()
    {
        @if (PasswordVisibility)
        {
            PasswordVisibility = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else
        {
            PasswordVisibility = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }

    async Task LoginUser()
    {
        
        success = await AccountService.Login(loginModel);
        if (success)
            NavMenager.NavigateTo("/personal/dashboard", true);
    }
}
