@inject IHttpClientFactory httpFactory

<MudDialog>
    <DialogContent>
        <MudGrid>
            @if (plugins != null)
            {
                foreach (var plugin in plugins)
                {
                    <MudItem lg="2" md="3" sm="6">
                        <MudCard>
                            <MudCardContent>
                                <div class="d-flex flex-grow-1 flex-wrap justify-center align-center">
                                    <MudAvatar Class="mud-elevation-25 justify-center">
                                        <MudIcon Icon="@Icons.Filled.TextFields" Class="mx-4" />
                                    </MudAvatar>
                                </div>
                                <MudText Typo="Typo.h5" Align="Align.Center">@plugin.Name</MudText>
                                <MudText Typo="Typo.overline" Align="Align.Center">@plugin.Version</MudText>
                                <MudText Typo="Typo.body2">Opis wtyczki trzeba dodac pole do bazy</MudText>
                            </MudCardContent>
                            <MudCardActions Class="justify-center">
                                <MudButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" Link="@($"/plugin/{plugin.Name}/add/{CourseId}/{SectionId}")">Add</MudButton>
                            </MudCardActions>
                        </MudCard>
                    </MudItem>
                }
            }
        </MudGrid>
    </DialogContent>
    <DialogActions>
        <MudButton OnClick="Cancel">Cancel</MudButton>
    </DialogActions>
</MudDialog>
@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter]
    public int CourseId { get; set; }
    [Parameter]
    public int? SectionId { get; set; }
    HttpClient httpClient;
    Foreman.Shared.Data.Plugin.Plugin[] plugins;

    void Cancel() => MudDialog.Cancel();

    protected override async Task OnInitializedAsync()
    {
        httpClient = httpFactory.CreateClient("Foreman.ServerAPI");

        var result = await httpClient.GetAsync($"Plugin/GetPlugins");
        if (!result.IsSuccessStatusCode)
        {
            //TODO Obsluga bledu
            return;
        }
        plugins = await result.Content.ReadFromJsonAsync<Foreman.Shared.Data.Plugin.Plugin[]>();
    }
}